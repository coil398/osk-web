(dp1
S'output'
p2
S"<type 'exceptions.IOError'> [Errno 2] No such file or directory: '/Users/kawasetakumi/Downloads/web2py/app.example.yaml'"
p3
sS'layer'
p4
S'/Users/kawasetakumi/Downloads/web2py/applications/admin/controllers/gae.py'
p5
sS'code'
p6
S'### this works on linux only\n\nimport re\ntry:\n    import fcntl\n    import subprocess\n    import signal\n    import os\n    import shutil\n    from gluon.fileutils import read_file, write_file\nexcept:\n    session.flash = \'sorry, only on Unix systems\'\n    redirect(URL(request.application, \'default\', \'site\'))\n\nif MULTI_USER_MODE and not is_manager():\n    session.flash = \'Not Authorized\'\n    redirect(URL(\'default\', \'site\'))\n\nfrom gluon.settings import settings\nif not settings.is_source:\n    session.flash = \'Requires running web2py from source\'\n    redirect(URL(request.application, \'default\', \'site\'))\n\nforever = 10 ** 8\n\n\ndef kill():\n    p = cache.ram(\'gae_upload\', lambda: None, forever)\n    if not p or p.poll() is not None:\n        return \'oops\'\n    os.kill(p.pid, signal.SIGKILL)\n    cache.ram(\'gae_upload\', lambda: None, -1)\n\n\nclass EXISTS(object):\n    def __init__(self, error_message=\'file not found\'):\n        self.error_message = error_message\n\n    def __call__(self, value):\n        if os.path.exists(value):\n            return (value, None)\n        return (value, self.error_message)\n\n\ndef deploy():\n    regex = re.compile(\'^\\w+$\')\n    apps = sorted(\n        file for file in os.listdir(apath(r=request)) if regex.match(file))\n    form = SQLFORM.factory(\n        Field(\'appcfg\', default=GAE_APPCFG, label=T(\'Path to appcfg.py\'),\n              requires=EXISTS(error_message=T(\'file not found\'))),\n        Field(\'google_application_id\', requires=IS_MATCH(\n            \'[\\w\\-]+\'), label=T(\'Google Application Id\')),\n        Field(\'applications\', \'list:string\',\n              requires=IS_IN_SET(apps, multiple=True),\n              label=T(\'web2py apps to deploy\')),\n        Field(\'email\', requires=IS_EMAIL(), label=T(\'GAE Email\')),\n        Field(\'password\', \'password\', requires=IS_NOT_EMPTY(), label=T(\'GAE Password\')))\n    cmd = output = errors = ""\n    if form.accepts(request, session):\n        try:\n            kill()\n        except:\n            pass\n        ignore_apps = [item for item in apps\n                       if not item in form.vars.applications]\n        regex = re.compile(\'\\(applications/\\(.*\')\n        yaml = apath(\'../app.yaml\', r=request)\n        if not os.path.exists(yaml):\n            example = apath(\'../app.example.yaml\', r=request)\n            shutil.copyfile(example, yaml)\n        data = read_file(yaml)\n        data = re.sub(\'application:.*\', \'application: %s\' %\n                      form.vars.google_application_id, data)\n        data = regex.sub(\n            \'(applications/(%s)/.*)|\' % \'|\'.join(ignore_apps), data)\n        write_file(yaml, data)\n\n        path = request.env.applications_parent\n        cmd = \'%s --email=%s --passin update %s\' % \\\n            (form.vars.appcfg, form.vars.email, path)\n        p = cache.ram(\'gae_upload\',\n                      lambda s=subprocess, c=cmd: s.Popen(c, shell=True,\n                                                          stdin=s.PIPE,\n                                                          stdout=s.PIPE,\n                                                          stderr=s.PIPE, close_fds=True), -1)\n        p.stdin.write(form.vars.password + \'\\n\')\n        fcntl.fcntl(p.stdout.fileno(), fcntl.F_SETFL, os.O_NONBLOCK)\n        fcntl.fcntl(p.stderr.fileno(), fcntl.F_SETFL, os.O_NONBLOCK)\n    return dict(form=form, command=cmd)\n\n\ndef callback():\n    p = cache.ram(\'gae_upload\', lambda: None, forever)\n    if not p or p.poll() is not None:\n        return \'<done/>\'\n    try:\n        output = p.stdout.read()\n    except:\n        output = \'\'\n    try:\n        errors = p.stderr.read()\n    except:\n        errors = \'\'\n    return (output + errors).replace(\'\\n\', \'<br/>\')\n\nresponse._vars=response._caller(deploy)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/kawasetakumi/Downloads/web2py/gluon/restricted.py", line 224, in restricted\n    exec ccode in environment\n  File "/Users/kawasetakumi/Downloads/web2py/applications/admin/controllers/gae.py", line 107, in <module>\n  File "/Users/kawasetakumi/Downloads/web2py/gluon/globals.py", line 393, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/kawasetakumi/Downloads/web2py/applications/admin/controllers/gae.py", line 71, in deploy\n    shutil.copyfile(example, yaml)\n  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py", line 82, in copyfile\n    with open(src, \'rb\') as fsrc:\nIOError: [Errno 2] No such file or directory: \'/Users/kawasetakumi/Downloads/web2py/app.example.yaml\'\n'
p11
s.